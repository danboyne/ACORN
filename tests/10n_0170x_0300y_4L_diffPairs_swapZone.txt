#12345678901234567890123456789012345678901234567890123456789012345678901234567890
# Any line that begins with a '#' character is a comment and is disregarded by
# the auto-router program. Blank lines are allowed. Use them to add clarity to 
# the input file.
#
# You can add additional comments following two consecutive slash characters:
# grid_resolution = 5  // 5 micron grid is fine enough for 20um line/space
#


# Specify the dimension in microns of the grid that the auto-router will use.
# Use a dimension that is less than one half to one quarter of the smallest
# linewidth or spacing in the design.
grid_resolution = 10  // in microns

# Specify the dimensions in millimeters of the grid:
width  = 1.7  // in millimeters
height = 3.0  // in millimeters

# Specify the number of routing layers. Typical values are 1, 2, 4, 6, and 8.
number_layers = 4

# Specify the name of each routing layer and (for multiple layers) the name
# of each intervening via layer. Examples:
# 
#   layer_names = M1 V1-2 M2 V2-3 M3 V3-4 M4  // For 4-layer substrate
#   layer_names = M   // for single-layer
#
layer_names = Pkg_M1 V1-2 Pkg_M2 V2-3 Pkg_M3 V3-4 Pkg_M4

#
# Specify the origin that the start/end-locations are relative to. Allowed 
# values are: center, lower_left, upper_left, lower_right, upper_right
#
origin = lower_left

#
# Specify the start- and end-locations of the paths to be routed. Dimensions are
# in microns, relative to the origin specified with the 'origin' statement.
# Start- and End-Layers are specified using the names from the 'layer_names'
# statement.
#
start_nets
# Net                Start   Start    Start        End      End     End     Net-specific     Diff Pair Partner  P/N terminal swappability
# Name               Layer     X        Y         Layer      X       Y      Rule (optional)  (optional)         (optional)
# ----------------- ------- -------- --------    ------- -------- --------  ---------------  -----------------  -------------------------
DIFF_PAIR_1_P       Pkg_M1    371.6   2565.42    Pkg_M4    1000     100       100_ohm         DIFF_PAIR_1_N      PN_swappable
DIFF_PAIR_1_N       Pkg_M1    371.6   2399.82    Pkg_M4    1000     100       100_ohm         DIFF_PAIR_1_P      PN_swappable

DIFF_PAIR_2_P       Pkg_M1    868.4   2565.42    Pkg_M4    1000     100       100_ohm         DIFF_PAIR_2_N      PN_swappable
DIFF_PAIR_2_N       Pkg_M1    868.4   2399.82    Pkg_M4    1000     100       100_ohm         DIFF_PAIR_2_P      PN_swappable

DIFF_PAIR_3_P       Pkg_M1   1365.2   2565.42    Pkg_M4    1000     100       100_ohm         DIFF_PAIR_3_N      PN_swappable
DIFF_PAIR_3_N       Pkg_M1   1365.2   2399.82    Pkg_M4    1000     100       100_ohm         DIFF_PAIR_3_P      PN_swappable

Net_259             Pkg_M1    664.1   2565.42    Pkg_M4    1000     100		
Net_262             Pkg_M1    951.2   2708.97    Pkg_M4    1000     100		
Net_261             Pkg_M1   1199.6   2708.97    Pkg_M4    1000     100		
Net_4               Pkg_M1   1199.6   2399.82    Pkg_M4    1000     100       PWR_GND	

end_nets


#
# Create L-shaped pin-swap zone on Pkg_M4 layer, in which all the ending-terminals are located.
# Above this pin-swap zone, block out the routing layers on M1, M2, and M3:
# 
pin_swap     Pkg_M4     RECT         0 0         1700   150
block   rect Pkg_M3                  0 0         1700   150
block   rect Pkg_M2                  0 0         1700   150
block   rect Pkg_M1                  0 0         1700   150

# 
# Specify which areas on each layer to block from routing. By default, all areas
# are routable. Use the following BLOCK or UNBLOCK statements to define 
# unroutable areas. All coordinates are in microns.
#
#  BLOCK RECT <layer name> X1 Y1 X2 Y2 // Block the rectangle defined by 
#                                      // (x1, y1) and (x2, y2)
#
#  BLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Block triangle defined by 
#                                            // 3 x/y coordinates
#
#  BLOCK CIR  <layer name> X Y R  // Block circle defined by center (x,y) and 
#                                 // radius R
#
#  BLOCK ALL <layer name>         // Block all cells on layer <layer name>
#
#  UNBLOCK RECT <layer name> X1 Y1 X2 Y2 // Unblock the rectangle defined by 
#                                        // (x1, y1) and (x2, y2)
#
#  UNBLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Unblock triangle defined 
#                                              // by 3 x/y coordinates
#
#  UNBLOCK CIR  <layer name> X Y R  // Unblock circle defined by center (x,y) 
#                                   // and radius R
#
#  UNBLOCK ALL <layer name>         // Unblock all cells on layer <layer name> 
#
# As an example, to create a keep-out zone on the perimeter of layer M1,
# use the folowing two commands:
#
#    BLOCK ALL M1                    // Block all of M1
#    UNBLOCK RECT M1 20 20 16.8 16.8 // Unblock a large rectangle in middle of M1
#


#
# Define cost-multipliers for traces and vias;
#
#  trace_cost_multipliter  <multiplier index>     <multiplier value>
#    via_cost_multipliter  <multiplier index>     <multiplier value>
trace_cost_multiplier             1                      2
trace_cost_multiplier             2                      4
trace_cost_multiplier             3                      5


# Use Pkg_M4 as an 'overflow' layer:
trace_cost_zone              2                  Pkg_M4           ALL


#
# Design rules: #########################################
#
design_rule_set Break_Out   Design Rules for break-out area on Pkg_M1 layer near die // Break-out rules
  line_width        = 17   // Minimum linewidth is 17 um in breakout area
  line_spacing      = 20   // Minimum trace-to-trace spacing is ~20um
  via_up_diameter   = 100  // Pad diameter is 100um
  via_down_diameter = 100  // Pad diameter is 100um

  via_up_to_trace_spacing      = 20  // Trace-to-pad spacing is 20um
  via_down_to_trace_spacing    = 20  // Trace-to-pad spacing is 20um
  via_up_to_via_up_spacing     = 40  // Via pad-to-pad spacing is 40-50um
  via_down_to_via_down_spacing = 40  // Via pad-to-pad spacing is 40-50um
  via_up_to_via_down_spacing   = 40  // Via pad-to-pad spacing is 40-50um

  exception = 100_ohm   // Exception design rules for 100-ohm differential pairs 
    diff_pair_pitch = 37  // Center-to-center pitch in break-out zone
  end_exception  // End of exception for 100-ohm differential pairs
  
end_design_rule_set   // End of design rule set

design_rule_set Non_Bottom   Design Rules for all package layers except bottom layer and breakout area // Rules for routing layers
  line_width        = 20   // Minimum linewidth is ~20 um
  line_spacing      = 20   // Minimum trace-to-trace spacing is ~20um
  via_up_diameter   = 100  // Pad diameter is 100um
  via_down_diameter = 100  // Pad diameter is 100um

  via_up_to_trace_spacing      = 20  // Trace-to-pad spacing is 20um
  via_down_to_trace_spacing    = 20  // Trace-to-pad spacing is 20um
  via_up_to_via_up_spacing     = 40  // Via pad-to-pad spacing is 40-50um
  via_down_to_via_down_spacing = 40  // Via pad-to-pad spacing is 40-50um
  via_up_to_via_down_spacing   = 40  // Via pad-to-pad spacing is 40-50um

  exception = PWR_GND   // Exception design rules power and ground nets 
    line_width        = 40   // Minimum linewidth is ~20 um
  end_exception  // End of exception power and ground nets
  
  exception = 100_ohm   // Exception design rules for 100-ohm differential pairs 
    line_width        = 35   //Linewidth is ~35 um on M1
    line_spacing      = 50   //Line spacing is ~50 um on M1

    via_up_to_trace_spacing      = 40  // Trace-to-pad spacing is 20um
    via_down_to_trace_spacing    = 50  // Trace-to-pad spacing is 20um
    via_up_to_via_up_spacing     = 50  // Via pad-to-pad spacing is 40-50um
    via_down_to_via_down_spacing = 50  // Via pad-to-pad spacing is 40-50um
    via_up_to_via_down_spacing   = 50  // Via pad-to-pad spacing is 40-50um
    
    diff_pair_pitch = 85  // Center-to-center pitch forDiff pairs
  end_exception  // End of exception for 100-ohm differential pairs
  
end_design_rule_set   // End of design rule set


############ Define define-rule zones: #####################
##
## Specify which areas on each layer will use each design-rule set.
## All coordinates are in microns.
##
##  DR_zone <DR name> <layer name>  RECT  X1 Y1 X2 Y2 // Use DR set 'DR name' in
##                                                    // rectangle defined by
##                                                    // (x1, y1) and (x2, y2)
##                                                    // on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> TRI  X1 Y1 X2 Y2 X2 Y3 // User DR set 'DR name'
##                                                        // in triangle defined by
##                                                        // 3 x/y coordinates on
##                                                        // layer 'layer name'.
##
##  DR_zone <DR name> <layer name> CIR  X Y R  // Use DR set 'DR name' in circle
##                                             // defined by center (x,y) and radius
##                                             // R on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> ALL      // Use DR set 'DR name' on all cells
##                                          // on layer <layer name>.
##
DR_zone   Non_Bottom      Pkg_M1    ALL
DR_zone   Break_Out       Pkg_M1    RECT      0  2299.82      1700  3000  // Area within 100 um of C4 bump array
DR_zone   Non_Bottom      Pkg_M2    ALL
DR_zone   Non_Bottom      Pkg_M3    ALL
DR_zone   Non_Bottom      Pkg_M4    ALL


#################################################################################
#################################################################################
#################################################################################
#
# The following parameters affect the final routed solution and run-time, but
# should not be modified without extreme caution:
#
#

# The parameter 'maxIterations' is the maximum number of iterations the program
# will make to find a crossing-free solution.
maxIterations = 500

# The parameter 'violationFreeThreshold' is the minimum number of crossing-free
# solutions that program will find before deciding that it has found the
# optimal solution.
violationFreeThreshold = 50

# The parameter 'vertCost' is the cost of routing up or down to a different
# routing layer, i.e., the cost of a layer-to-layer via. The value is in
# microns, and should be interpreted as half the trace-length that could be
# avoided by adding a via to a different layer.
vertCost  = 5000   // in microns of equivalent trace length

# The parameter 'runsPerPngMap' is the number of iterations to run between
# writing PNG versions of the routing maps.
runsPerPngMap =  1
