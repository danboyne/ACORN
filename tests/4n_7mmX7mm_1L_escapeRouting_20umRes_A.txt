#12345678901234567890123456789012345678901234567890123456789012345678901234567890
# Any line that begins with a '#' character is a comment and is disregarded by
# the auto-router program. Blank lines are allowed. Use them to add clarity to 
# the input file.
#
# You can add additional comments following two consecutive slash characters:
# grid_resolution = 5  // 5 micron grid is fine enough for 20um line/space
#


# Specify the dimension in microns of the grid that the auto-router will use.
# Use a dimension that is less than one half to one quarter of the smallest
# linewidth or spacing in the design.
grid_resolution = 20  // in microns

# Specify the dimensions in millimeters of the grid:
width  = 7.0  // in millimeters
height = 7.0  // in millimeters

# Specify the number of routing layers. Typical values are 1, 2, 4, 6, and 8.
number_layers = 2

# Specify the name of each routing layer and (for multiple layers) the name
# of each intervening via layer. Examples:
# 
#   layer_names = M1 V1-2 M2 V2-3 M3 V3-4 M4  // For 4-layer substrate
#   layer_names = M   // for single-layer
#
layer_names = TERMINAL TERM_VIA ROUTING

#
# Specify the origin that the start/end-locations are relative to. Allowed 
# values are: center, lower_left, upper_left, lower_right, upper_right
#
origin = lower_left

#
# Specify the start- and end-locations of the paths to be routed. Dimensions are
# in microns, relative to the origin specified with the 'origin' statement.
# Start- and End-Layers are specified using the names from the 'layer_names'
# statement.
#
start_nets
# Net         Start      Start    Start       End         End      End     Net-specific     Diff Pair Partner
# Name        Layer        X        Y         Layer        X        Y      Rule (optional)  (optional)
# ----------- --------- -------- --------     --------- -------- --------  ---------------  -----------------
#
# Nets that route from the left BGA array to the right BGA:
#
N_1           TERMINAL     1000     5000      TERMINAL     5000    1000
N_2           TERMINAL     2000     5000      TERMINAL     5000    2000
N_3           TERMINAL     4000     5000      TERMINAL     5000    4000
N_4           TERMINAL     1000     1000      TERMINAL     5000    5000
#
# The following 'dummy nets' represent the no-connects for BGA sites that
# are not routed:
#
NC_A        TERMINAL   1000  6000             ROUTING   1000   6000        // No-connect
NC_B        TERMINAL   2000  6000             ROUTING   2000   6000        // No-connect
NC_C        TERMINAL   3000  6000             ROUTING   3000   6000        // No-connect
NC_D        TERMINAL   4000  6000             ROUTING   4000   6000        // No-connect
NC_E        TERMINAL   5000  6000             ROUTING   5000   6000        // No-connect
NC_F        TERMINAL   6000  6000             ROUTING   6000   6000        // No-connect
NC_G        TERMINAL   6000  5000             ROUTING   6000   5000        // No-connect
NC_H        TERMINAL   6000  4000             ROUTING   6000   4000        // No-connect
NC_I        TERMINAL   6000  3000             ROUTING   6000   3000        // No-connect
NC_J        TERMINAL   6000  2000             ROUTING   6000   2000        // No-connect
NC_K        TERMINAL   6000  1000             ROUTING   6000   1000        // No-connect
end_nets

# 
# Specify which areas on each layer to block from routing. By default, all areas
# are routable. Use the following BLOCK or UNBLOCK statements to define 
# unroutable areas. All coordinates are in microns.
#
#  BLOCK RECT <layer name> X1 Y1 X2 Y2 // Block the rectangle defined by 
#                                      // (x1, y1) and (x2, y2)
#
#  BLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Block triangle defined by 
#                                            // 3 x/y coordinates
#
#  BLOCK CIR  <layer name> X Y R  // Block circle defined by center (x,y) and 
#                                 // radius R
#
#  BLOCK ALL <layer name>         // Block all cells on layer <layer name>
#
#  UNBLOCK RECT <layer name> X1 Y1 X2 Y2 // Unblock the rectangle defined by 
#                                        // (x1, y1) and (x2, y2)
#
#  UNBLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Unblock triangle defined 
#                                              // by 3 x/y coordinates
#
#  UNBLOCK CIR  <layer name> X Y R  // Unblock circle defined by center (x,y) 
#                                   // and radius R
#
#  UNBLOCK ALL <layer name>         // Unblock all cells on layer <layer name> 
#
# As an example, to create a keep-out zone on the perimeter of layer M1,
# use the folowing two commands:
#
#    BLOCK ALL M1                    // Block all of M1
#    UNBLOCK RECT M1 20 20 16.8 16.8 // Unblock a large rectangle in middle of M1
#

#
# Block the entire TERMINAL layer and unblock circles around the terminals:
#
BLOCK   ALL TERMINAL

# Terminals for active nets:			
UNBLOCK CIR TERMINAL	1000	5000	290
UNBLOCK CIR TERMINAL	2000	5000	290
UNBLOCK CIR TERMINAL	4000	5000	290
UNBLOCK CIR TERMINAL	5000	5000	290
UNBLOCK CIR TERMINAL	5000	1000	290
UNBLOCK CIR TERMINAL	5000	2000	290
UNBLOCK CIR TERMINAL	5000	4000	290
UNBLOCK CIR TERMINAL	1000	1000	290
			
# No-connect terminals:			
UNBLOCK CIR TERMINAL	1000	6000	290
UNBLOCK CIR TERMINAL	2000	6000	290
UNBLOCK CIR TERMINAL	3000	6000	290
UNBLOCK CIR TERMINAL	4000	6000	290
UNBLOCK CIR TERMINAL	5000	6000	290
UNBLOCK CIR TERMINAL	6000	6000	290
UNBLOCK CIR TERMINAL	6000	5000	290
UNBLOCK CIR TERMINAL	6000	4000	290
UNBLOCK CIR TERMINAL	6000	3000	290
UNBLOCK CIR TERMINAL	6000	2000	290
UNBLOCK CIR TERMINAL	6000	1000	290

#
# Block areas for routing in order to force nets N_1 and N_2 to route towards
# upper-right of map:
#
BLOCK  RECT  ROUTING     0  4000    3000  4040
# BLOCK  RECT  ROUTING  1500  4000    1540  5300
BLOCK  RECT  ROUTING  3000  4000    3040  5300

BLOCK  RECT  ROUTING  4000     0    4040  3000
# BLOCK  RECT  ROUTING  4000  1500    5300  1540
BLOCK  RECT  ROUTING  4000  3000    5300  3040



#
# Define cost-multipliers for traces and vias;
#
#  trace_cost_multipliter  <multiplier index>     <multiplier value>
#    via_cost_multipliter  <multiplier index>     <multiplier value>
# trace_cost_multiplier             1                      2
# trace_cost_multiplier             2                      4
# trace_cost_multiplier             3                      5


# Avoid routing in rectangle directly beneath center of die:
# trace_cost_zone              1                  Pkg_M1           RECT  11000 10000   14000 14000
# trace_cost_zone              1                  Pkg_M2           RECT  11000 10000   14000 14000
# trace_cost_zone              1                  Pkg_M3           RECT  11000 10000   14000 14000

# Use Pkg_M4 as an 'overflow' layer:
# trace_cost_zone              2                  Pkg_M4           ALL


#
# Design rules: #########################################
#
design_rule_set PCB   Design Rules for PCB routing // PCB routing rules
  line_width        = 70   // Allows 2 parallel traces between adjacent BGA terminals
  line_spacing      = 40   // Allows 2 parallel traces between adjacent BGA terminals
  via_up_diameter   = 580  // BGA terminal diameter
  via_down_diameter = 580  // BGA terminal diameter

  via_up_to_trace_spacing      =  40  // Allows 2 parallel traces between adjacent BGAs
  via_down_to_trace_spacing    =  40  // Allows 2 parallel traces between adjacent BGAs
  via_up_to_via_up_spacing     = 400  // Terminal pitch is 1000um. Terminal diameter
  via_down_to_via_down_spacing = 400  // is 580um. Terminal spacing is 420um.
  via_up_to_via_down_spacing   = 400  // 
end_design_rule_set   // End of design rule set



############ Define define-rule zones: #####################
##
## Specify which areas on each layer will use each design-rule set.
## All coordinates are in microns.
##
##  DR_zone <DR name> <layer name>  RECT  X1 Y1 X2 Y2 // Use DR set 'DR name' in
##                                                    // rectangle defined by
##                                                    // (x1, y1) and (x2, y2)
##                                                    // on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> TRI  X1 Y1 X2 Y2 X2 Y3 // User DR set 'DR name'
##                                                        // in triangle defined by
##                                                        // 3 x/y coordinates on
##                                                        // layer 'layer name'.
##
##  DR_zone <DR name> <layer name> CIR  X Y R  // Use DR set 'DR name' in circle
##                                             // defined by center (x,y) and radius
##                                             // R on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> ALL      // Use DR set 'DR name' on all cells
##                                          // on layer <layer name>.
##
DR_zone   PCB           ROUTING     ALL
DR_zone   PCB           TERMINAL    ALL


#################################################################################
#################################################################################
#################################################################################
#
# The following parameters affect the final routed solution and run-time, but
# should not be modified without extreme caution:
#
#

# The parameter 'maxIterations' is the maximum number of iterations the program
# will make to find a crossing-free solution.
maxIterations = 2000

# The parameter 'violationFreeThreshold' is the minimum number of crossing-free
# solutions that program will find before deciding that it has found the
# optimal solution.
violationFreeThreshold = 100

# The parameter 'vertCost' is the cost of routing up or down to a different
# routing layer, i.e., the cost of a layer-to-layer via. The value is in
# microns, and should be interpreted as half the trace-length that could be
# avoided by adding a via to a different layer.
vertCost  = 5000   // in microns of equivalent trace length

# The parameter 'runsPerPngMap' is the number of iterations to run between
# writing PNG versions of the routing maps.
runsPerPngMap =  1
