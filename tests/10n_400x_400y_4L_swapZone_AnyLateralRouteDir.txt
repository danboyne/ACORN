#12345678901234567890123456789012345678901234567890123456789012345678901234567890
# Any line that begins with a '#' character is a comment and is disregarded by
# the auto-router program. Blank lines are allowed. Use them to add clarity to 
# the input file.
#
# You can add additional comments following two consecutive slash characters:
# grid_resolution = 5  // 5 micron grid is fine enough for 20um line/space
#


# Specify the dimension in microns of the grid that the auto-router will use.
# Use a dimension that is less than one half to one quarter of the smallest
# linewidth or spacing in the design.
grid_resolution = 0.5  // in microns

# Specify the dimensions in millimeters of the grid:
width  = 0.200  // in millimeters
height = 0.200  // in millimeters

# Specify the number of routing layers. Typical values are 1, 2, 4, 6, and 8.
number_layers = 4

# Specify the name of each routing layer and (for multiple layers) the name
# of each intervening via layer. Examples:
# 
#   layer_names = M1 V1-2 M2 V2-3 M3 V3-4 M4  // For 4-layer substrate
#   layer_names = M   // for single-layer
#
layer_names = M1 VIA_1_2 M2 VIA_2_3 M3 VIA_3_4 M4

#
# Specify the origin that the start/end-locations are relative to. Allowed 
# values are: center, lower_left, upper_left, lower_right, upper_right
#
origin = lower_left

#
# Specify the start- and end-locations of the paths to be routed. Dimensions are
# in microns, relative to the origin specified with the 'origin' statement.
# Start- and End-Layers are specified using the names from the 'layer_names'
# statement.
#
start_nets
# Net        Start  Start Start    End    End   End    Exception
# Name       Layer    X     Y     Layer    X     Y     Name
# --------  ------- ----- -----  ------- ----- -----   ---------
     A         M1    100   120      M4    110   196
     B         M1    116   120      M4    110   196
     C         M1    120   110      M4    110   196
     D         M1    120    90      M4    110   196
     E         M1    116    80      M4    110   196
     F         M1    100    80      M4     90     4     SPECIAL
     G         M1     84    80      M4    110   196
     H         M1     80    90      M4    110   196
     I         M1     80   110      M4    110   196
     J         M1     84   120      M4    110   196
end_nets

#
# Pin-swap zones:
# 
# Create circular pin-swap zone at perimeter of map:
pin_swap     M4     CIR     100 100    100
no_pin_swap  M4     CIR     100 100     96

#
# Create circular blocks on M1, M2 tnd M3 to force vias near map's center:
#
BLOCK    CIR  M1    100 100    45
UNBLOCK  CIR  M1    100 100    44

BLOCK    CIR  M2    100 100    65
UNBLOCK  CIR  M2    100 100    64

BLOCK    CIR  M3    100 100    85
UNBLOCK  CIR  M3    100 100    84

#
# Design rules: #########################################
#
design_rule_set Design_Rules   Typical Design Rules // Rules for most of map

  allowed_directions = ANY // Value can be ANY, NONE, MANHATTAN, X_ROUTING, NORTH_SOUTH, EAST_WEST, MANHATTAN_X, UP_DOWN

  line_width = 2
  line_spacing = 2
  via_up_diameter = 6
  via_down_diameter = 6

  via_up_to_trace_spacing = 2
  via_down_to_trace_spacing = 2
  via_up_to_via_up_spacing = 2
  via_down_to_via_down_spacing = 2
  via_up_to_via_down_spacing = 2
end_design_rule_set   // End of design rule set


design_rule_set No_Vertical_Routing For area where vias are forbidden // Area for forbidden up/down routing

  allowed_directions = ANY_LATERAL // Value can be ANY, NONE, MANHATTAN, X_ROUTING, NORTH_SOUTH, EAST_WEST, MANHATTAN_X, UP_DOWN, ANY_LATERAL

  line_width = 4
  line_spacing = 2
  via_up_diameter = 6
  via_down_diameter = 6

  via_up_to_trace_spacing = 2
  via_down_to_trace_spacing = 2
  via_up_to_via_up_spacing = 2
  via_down_to_via_down_spacing = 2
  via_up_to_via_down_spacing = 2

  exception = SPECIAL
    allowed_directions = ANY
  end_exception
end_design_rule_set   // End of design rule set

#
# Define design-rule zones. Start by defining all layers having the 
# 'Design_Rules' set of rules. Then over-write these rules with the
# 'No_Routing' rules for the lower 25% of each layer:
#
DR_zone    Design_Rules            M1  ALL
DR_zone    Design_Rules            M2  ALL
DR_zone    Design_Rules            M3  ALL
DR_zone    Design_Rules            M4  ALL
DR_zone    No_Vertical_Routing     M1  RECT   0   0        200   75
DR_zone    No_Vertical_Routing     M2  RECT   0   0        200   75
DR_zone    No_Vertical_Routing     M3  RECT   0   0        200   75
DR_zone    No_Vertical_Routing     M4  RECT   0   0        200   75


#################################################################################
#################################################################################
#################################################################################
#
# The following parameters affect the final routed solution and run-time, but
# should not be modified without extreme caution:
#
#

# The parameter 'maxIterations' is the maximum number of iterations the program
# will make to find a crossing-free solution.
maxIterations = 100

# The parameter 'violationFreeThreshold' is the minimum number of crossing-free
# solutions that program will find before deciding that it has found the
# optimal solution.
violationFreeThreshold = 10

# The parameter 'vertCost' is the cost of routing up or down to a different
# routing layer, i.e., the cost of a layer-to-layer via.
vertCost  = 1

# The parameter 'runsPerPngMap' is the number of iterations to run between
# writing PNG versions of the routing maps.
runsPerPngMap =  1



