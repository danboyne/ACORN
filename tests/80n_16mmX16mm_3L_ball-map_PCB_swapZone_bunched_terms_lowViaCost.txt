# ACORN input file
# ================
#
# Any line that begins with a '#' character is a comment and is disregarded by
# the Acorn program. Blank lines are allowed. Use them to add clarity to 
# the input file.
#
# You can add additional comments following two consecutive slash characters,
# for example:
#    grid_resolution = 5  // 5 micron grid 
#

# Specify the dimension in microns of the grid that the auto-router will use.
# Smaller values cause longer run-times, so choose a dimension that is 
# one half the minimum pitch. For example, if the minimum line and space
# are both 20 microns (40 um pitch), then choose 20 microns for the resolution.
grid_resolution = 15  // in microns

# Specify the dimensions in millimeters of the grid. This should be large enough for
# the package and/or PCB:
width  = 16  // in millimeters
height = 16  // in millimeters

# Specify the number of routing layers. This should include package and PCB 
# routing layers, but should exclude via layers or the BGA layer.
number_layers = 3

# Specify the name of each routing layer and (for multiple layers) the name
# of each intervening via layer. Examples:
# 
#   layer_names = M1 V1-2 M2 V2-3 M3 V3-4 M4  // For 4-layer substrate
#   layer_names = M   // for single-layer
#
# If there are 'N' routing layers, then you should specify 2N-1 layer names
layer_names = Pkg_bot BGA PCB_top PCB_via PCB_bottom

#
# Specify the start- and end-locations of the paths to be routed. Dimensions are
# in microns, relative to the lower-left corner. Start- and End-Layers are 
# specified using the names from the 'layer_names' statement.
#
start_nets
# Net           Start    Start          Start            End      End    End
# Name          Layer      X               Y             Layer     X      Y
# --------     -------   -----           -----         -------   -----  -----
Net_0           Pkg_bot   9500      10000      PCB_top    8000      400
Net_1           Pkg_bot   8000      10500      PCB_top    8000      400
Net_2           Pkg_bot   5500       8000      PCB_top    8000      400
Net_3           Pkg_bot   5500       6500      PCB_top    8000      400
Net_4           Pkg_bot  10500       5500      PCB_top    8000      400
Net_5           Pkg_bot   5000       9000      PCB_top    8000      400
Net_6           Pkg_bot   4500       9000      PCB_top    8000      400
Net_7           Pkg_bot   9500       4500      PCB_top    8000      400
Net_8           Pkg_bot  10000       5000      PCB_top    8000      400
Net_9           Pkg_bot  10000       4500      PCB_top    8000      400
Net_10          Pkg_bot  10500       7000      PCB_top    8000      400
Net_11          Pkg_bot   7000       5000      PCB_top    8000      400
Net_12          Pkg_bot   7000       4500      PCB_top    8000      400
Net_13          Pkg_bot   8000       9500      PCB_top    8000      400
Net_14          Pkg_bot  11000       8000      PCB_top    8000      400
Net_15          Pkg_bot  11500       8000      PCB_top    8000      400
Net_16          Pkg_bot  10500       8500      PCB_top    8000      400
Net_17          Pkg_bot  10500       9000      PCB_top    8000      400
Net_18          Pkg_bot  10500       7500      PCB_top    8000      400
Net_19          Pkg_bot  10500       8000      PCB_top    8000      400
Net_20          Pkg_bot  11000       9000      PCB_top    8000      400
Net_21          Pkg_bot  11500       9000      PCB_top    8000      400
Net_22          Pkg_bot  11500       6000      PCB_top    8000      400
Net_23          Pkg_bot  10500       5000      PCB_top    8000      400
Net_24          Pkg_bot  11000       4500      PCB_top    8000      400
Net_25           Pkg_bot  11000       5000      PCB_top    8000      400
Net_26          Pkg_bot   4500       5500      PCB_top    8000      400
Net_27          Pkg_bot   4500       6000      PCB_top    8000      400
Net_28          Pkg_bot  11000       7000      PCB_top    8000      400
Net_29          Pkg_bot   8000       6000      PCB_top    8000      400
Net_30          Pkg_bot   5000       7000      PCB_top    8000      400
Net_31          Pkg_bot   4500      10500      PCB_top    8000      400
Net_32          Pkg_bot   4500      10000      PCB_top    8000      400
Net_33          Pkg_bot   5000      11000      PCB_top    8000      400
Net_34          Pkg_bot   5000      11500      PCB_top    8000      400
Net_35_P         Pkg_bot  11000      11000      PCB_top    8000      400
Net_36_N         Pkg_bot  11000      11500      PCB_top    8000      400
Net_37_P         Pkg_bot  11500      10500      PCB_top    8000      400
Net_38_N         Pkg_bot  11500      10000      PCB_top    8000      400
Net_39          Pkg_bot   6000      11500      PCB_top    8000      400
Net_40          Pkg_bot   6000      11000      PCB_top    8000      400
Net_41          Pkg_bot   7000      11000      PCB_top    8000      400
Net_42          Pkg_bot   7000      11500      PCB_top    8000      400
Net_43          Pkg_bot   9000      11000      PCB_top    8000      400
Net_44          Pkg_bot   9000      11500      PCB_top    8000      400
Net_45          Pkg_bot  10000      11500      PCB_top    8000      400
Net_46          Pkg_bot  10000      11000      PCB_top    8000      400
Net_47          Pkg_bot  10500       6000      PCB_top    8000      400
Net_48          Pkg_bot   5000       4500      PCB_top    8000      400
Net_49          Pkg_bot   5000       5000      PCB_top    8000      400
Net_50          Pkg_bot   6000       4500      PCB_top    8000      400
Net_51          Pkg_bot   6000       5000      PCB_top    8000      400
Net_52          Pkg_bot   6000       7000      PCB_top    8000      400
Net_53          Pkg_bot   6000       6000      PCB_top    8000      400
Net_54          Pkg_bot   8000       5000      PCB_top    8000      400
Net_55          Pkg_bot   7500       5000      PCB_top    8000      400
Net_56          Pkg_bot   8500       5000      PCB_top    8000      400
Net_57          Pkg_bot   9000       5000      PCB_top    8000      400
Net_58          Pkg_bot   9500       5000      PCB_top    8000      400
Net_59          Pkg_bot   8000       4500      PCB_top    8000      400
Net_60          Pkg_bot   8500       4500      PCB_top    8000      400
Net_61             Pkg_bot   9000       5500      PCB_top    8000      400
Net_62          Pkg_bot   4500       8000      PCB_top    8000      400
Net_63          Pkg_bot   5000       8000      PCB_top    8000      400
Net_64             Pkg_bot   9000       6000      PCB_top    8000      400
Net_65             Pkg_bot  10000       5500      PCB_top    8000      400
Net_66          Pkg_bot   4500       7000      PCB_top    8000      400
Net_67             Pkg_bot  10000       6000      PCB_top    8000      400
Net_68          Pkg_bot   8000       5500      PCB_top    8000      400
Net_69          Pkg_bot  10500       6500      PCB_top    8000      400
Net_70          Pkg_bot  11500       7000      PCB_top    8000      400
Net_71          Pkg_bot  10500      10000      PCB_top    8000      400
Net_72          Pkg_bot   7500      11000      PCB_top    8000      400
Net_73          Pkg_bot   7500      11500      PCB_top    8000      400
Net_74          Pkg_bot   8500      11000      PCB_top    8000      400
Net_75          Pkg_bot   8500      11500      PCB_top    8000      400
Net_76           Pkg_bot  11000       6000      PCB_top    8000      400
Net_77           Pkg_bot  11500       5000      PCB_top    8000      400
Net_78          Pkg_bot   6500      10000      PCB_top    8000      400
Net_79          Pkg_bot   5500      10000      PCB_top    8000      400
end_nets

#
#
# Specify a single, circular pin-swappable zone that is surrounded by an unwalkable region
# on both layers of the PCB (PCB_top and PCB_bottom).
#

# PCB_top layer:
pin_swap     PCB_top     CIR    8000  8000     7650  // Circle at center of PCB with 7650 um radius
no_pin_swap  PCB_top     CIR    8000  8000     7550  // Anti-circle at PCB center with 7550 um radius

BLOCK   ALL  PCB_top
UNBLOCK CIR  PCB_top            8000  8000     7650  // Allow routing within pin-swap region and non-pin-swap region on PCB layer

# PCB_bottom layer:
pin_swap     PCB_bottom  CIR    8000  8000     7650  // Circle at center of PCB with 7650 um radius
no_pin_swap  PCB_bottom  CIR    8000  8000     7550  // Anti-circle at PCB center with 7550 um radius

BLOCK   ALL  PCB_bottom
UNBLOCK CIR  PCB_bottom         8000  8000     7650  // Allow routing within pin-swap region and non-pin-swap region on PCB layer

#
# Optional: Tell the auto-router which areas are off-limits (keep-out
#           zones.
# 
# Specify which areas on each layer to block from routing. By default, all areas
# are routable. Use the following BLOCK or UNBLOCK statements to define 
# unroutable areas. All coordinates are in microns, relative to the lower-left
# corner.
#
#  BLOCK RECT <layer name> X1 Y1 X2 Y2 // Block the rectangle defined by 
#                                      // (x1, y1) and (x2, y2)
#
#  BLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Block triangle defined by 
#                                            // 3 x/y coordinates
#
#  BLOCK CIR  <layer name> X Y R  // Block circle defined by center (x,y) and 
#                                 // radius R
#
#  BLOCK ALL <layer name>         // Block all cells on layer <layer name>
#
#  UNBLOCK RECT <layer name> X1 Y1 X2 Y2 // Unblock the rectangle defined by 
#                                        // (x1, y1) and (x2, y2)
#
#  UNBLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Unblock triangle defined 
#                                              // by 3 x/y coordinates
#
#  UNBLOCK CIR  <layer name> X Y R  // Unblock circle defined by center (x,y) 
#                                   // and radius R
#
#  UNBLOCK ALL <layer name>         // Unblock all cells on layer <layer name> 
#
# As an example, to create a keep-out zone on the perimeter of layer M1,
# use the folowing two commands:
#
#    BLOCK ALL M1                    // Block all of M1
#    UNBLOCK RECT M1 20 20 16.8 16.8 // Unblock a large rectangle in middle of M1
#

#
# Block all routing layers in package outside of 8x8mm package outline. Within the
# package outline, define 300um keep-out zone at the package edge.
#
BLOCK ALL Pkg_bot
UNBLOCK RECT Pkg_bot 4300 4300 11700 11700 // Allow routing within pkg, with 300um keep-out zone on perimeter
#
# End of package outline definition
#

#
# Create the BGA pattern on layers BGA and PCB:
#
BLOCK   RECT BGA  4000 4000 12000 12000  // Block BGA layer under package, and then unblock circles for BGAs
UNBLOCK CIR BGA 	9500	10000	180 // 360-micron diameter is sufficient for BGA pad with diameter of 330um
UNBLOCK CIR BGA 	8000	10500	180
UNBLOCK CIR BGA 	5500	8000	180
UNBLOCK CIR BGA 	5500	6500	180
UNBLOCK CIR BGA 	10500	5500	180
UNBLOCK CIR BGA 	5000	9000	180
UNBLOCK CIR BGA 	4500	9000	180
UNBLOCK CIR BGA 	9500	4500	180
UNBLOCK CIR BGA 	10000	5000	180
UNBLOCK CIR BGA 	10000	4500	180
UNBLOCK CIR BGA 	10500	7000	180
UNBLOCK CIR BGA 	7000	5000	180
UNBLOCK CIR BGA 	7000	4500	180
UNBLOCK CIR BGA 	8000	9500	180
UNBLOCK CIR BGA 	11000	8000	180
UNBLOCK CIR BGA 	11500	8000	180
UNBLOCK CIR BGA 	10500	8500	180
UNBLOCK CIR BGA 	10500	9000	180
UNBLOCK CIR BGA 	10500	7500	180
UNBLOCK CIR BGA 	10500	8000	180
UNBLOCK CIR BGA 	11000	9000	180
UNBLOCK CIR BGA 	11500	9000	180
UNBLOCK CIR BGA 	11500	6000	180
UNBLOCK CIR BGA 	10500	5000	180
UNBLOCK CIR BGA 	11000	4500	180
UNBLOCK CIR BGA 	11000	5000	180
UNBLOCK CIR BGA 	4500	5500	180
UNBLOCK CIR BGA 	4500	6000	180
UNBLOCK CIR BGA 	11000	7000	180
UNBLOCK CIR BGA 	8000	6000	180
UNBLOCK CIR BGA 	5000	7000	180
UNBLOCK CIR BGA 	4500	10500	180
UNBLOCK CIR BGA 	4500	10000	180
UNBLOCK CIR BGA 	5000	11000	180
UNBLOCK CIR BGA 	5000	11500	180
UNBLOCK CIR BGA 	11000	11000	180
UNBLOCK CIR BGA 	11000	11500	180
UNBLOCK CIR BGA 	11500	10500	180
UNBLOCK CIR BGA 	11500	10000	180
UNBLOCK CIR BGA 	6000	11500	180
UNBLOCK CIR BGA 	6000	11000	180
UNBLOCK CIR BGA 	7000	11000	180
UNBLOCK CIR BGA 	7000	11500	180
UNBLOCK CIR BGA 	9000	11000	180
UNBLOCK CIR BGA 	9000	11500	180
UNBLOCK CIR BGA 	10000	11500	180
UNBLOCK CIR BGA 	10000	11000	180
UNBLOCK CIR BGA 	10500	6000	180
UNBLOCK CIR BGA 	5000	4500	180
UNBLOCK CIR BGA 	5000	5000	180
UNBLOCK CIR BGA 	6000	4500	180
UNBLOCK CIR BGA 	6000	5000	180
UNBLOCK CIR BGA 	6000	7000	180
UNBLOCK CIR BGA 	6000	6000	180
UNBLOCK CIR BGA 	8000	5000	180
UNBLOCK CIR BGA 	7500	5000	180
UNBLOCK CIR BGA 	8500	5000	180
UNBLOCK CIR BGA 	9000	5000	180
UNBLOCK CIR BGA 	9500	5000	180
UNBLOCK CIR BGA 	8000	4500	180
UNBLOCK CIR BGA 	8500	4500	180
UNBLOCK CIR BGA 	9000	5500	180
UNBLOCK CIR BGA 	4500	8000	180
UNBLOCK CIR BGA 	5000	8000	180
UNBLOCK CIR BGA 	9000	6000	180
UNBLOCK CIR BGA 	10000	5500	180
UNBLOCK CIR BGA 	4500	7000	180
UNBLOCK CIR BGA 	10000	6000	180
UNBLOCK CIR BGA 	8000	5500	180
UNBLOCK CIR BGA 	10500	6500	180
UNBLOCK CIR BGA 	11500	7000	180
UNBLOCK CIR BGA 	10500	10000	180
UNBLOCK CIR BGA 	7500	11000	180
UNBLOCK CIR BGA 	7500	11500	180
UNBLOCK CIR BGA 	8500	11000	180
UNBLOCK CIR BGA 	8500	11500	180
UNBLOCK CIR BGA 	11000	6000	180
UNBLOCK CIR BGA 	11500	5000	180
UNBLOCK CIR BGA 	6500	10000	180
UNBLOCK CIR BGA 	5500	10000	180
UNBLOCK CIR BGA 	6500	10000	180
UNBLOCK CIR BGA 	5500	10000	180
# End of BGA pattern definition for layer 'BGA'



#
# Optional: Tell the auto-router to avoid certain areas if possible. First,
#           define cost-multipliers (e.g., 2x, 3x). Second, define which
#           areas/zones to apply these cost-multipliers.
# 
# Define cost-multipliers for traces and vias. Valid values for
# <multiplier index> are 1 to 15 for traces, and 1 to 7 for vias.  
#
#  trace_cost_multipliter  <multiplier index>     <multiplier value>
#    via_cost_multipliter  <multiplier index>     <multiplier value>
trace_cost_multiplier             1                      2  // Not used
trace_cost_multiplier             2                      4  // Not used
trace_cost_multiplier             3                      5  // Not used
trace_cost_multiplier             4                     10  // Used for Pkg_bot

via_cost_multiplier               1                      2  // Not used
via_cost_multiplier               2                      3  // Not used
via_cost_multiplier               3                      4  // Not used

#
# Define locations of high-cost zones for traces and vias. 
#
# trace_cost_zone   <trace mult. index>     <rout. layer name>   <ALL|RECT|CIR|TRI>
#   via_cost_zone     <via mult. index>       <via layer name>   <ALL|RECT|CIR|TRI>

# Limit routing on package layers M4, which is used for BGAs and ground plane
trace_cost_zone                4                Pkg_bot          ALL  // 10x cost-multiplier



#
# Design rules: Specify up to 15 design-rule sets. Later, we'll define
#               where each set is used in the design.
# 
# Syntax is:
#   design_rule_set  <DR set name (no spaces)>   <DR set description>
#     line_width        = ___ // in microns
#     line_spacing      = ___ // in microns  
#     via_up_diameter   = ___ // in microns
#     via_down_diameter = ___ // in microns
#     via_up_to_trace_spacing      = ___ // in microns
#     via_down_to_trace_spacing    = ___ // in microns
#     via_up_to_via_up_spacing     = ___ // in microns
#     via_down_to_via_down_spacing = ___ // in microns
#     via_up_to_via_down_spacing   = ___ // in microns
#   end_design_rule_set
#


design_rule_set Pkg_bottom_DRs   Design rules for bottom package layer  
  line_width        = 30   // Minimum linewidth on bottom is 30um
  line_spacing      = 60   // Minimum linewidth on bottom is 60um
  via_up_diameter   = 330  // BGA pad diameter is 330um
  via_down_diameter = 95   // M4 land diameter is 95um for M3-to-M4 vias

  via_up_to_trace_spacing      =  50 // Minimum M4 trace-to-BGA-pad spacing is 50um
  via_down_to_trace_spacing    =  30 // Minimum M4 trace-to-pad spacing is 30um
  via_up_to_via_up_spacing     = 155 // Minimum BGA pad-to-pad spacing is 170um
  via_down_to_via_down_spacing = 175 // Minimum M4 pad-to-pad spacing is ~175um for M3-to-M4 vias
  via_up_to_via_down_spacing   =  35 // Minimum BGA pad-to-via pad spacing is ~35um
end_design_rule_set   // End of design rule set


design_rule_set PCB_top_DRs    Design rules for top PCB layer  
  line_width        = 100  // Guess
  line_spacing      = 100  // Guess
  via_up_diameter   = 300  // Guess for via pad size on top PCB layer, for via to bottom PCB layer
  via_down_diameter = 330  // Matches BGA pad diameter, which is 330um

  via_up_to_trace_spacing      = 100 // Guess
  via_down_to_trace_spacing    = 100 // Guess
  via_up_to_via_up_spacing     = 100 // Guess
  via_down_to_via_down_spacing = 155 // BGA pad-to-pad spacing is 170 um
  via_up_to_via_down_spacing   = 100 // Guess
end_design_rule_set   // End of design rule set


design_rule_set PCB_bottom_DRs    Design rules for bottom PCB layer  
  line_width        = 100  // Guess
  line_spacing      = 100  // Guess
  via_up_diameter   = 100  // Not applicable for 2-layer PCB
  via_down_diameter = 300  // Guess for via pad size on bottom PCB layer, for via to top PCB layer

  via_up_to_trace_spacing      = 100 // Not applicable for 2-layer PCB
  via_down_to_trace_spacing    = 100 // Guess
  via_up_to_via_up_spacing     = 100 // Not applicable for 2-layer PCB
  via_down_to_via_down_spacing = 100 // Guess
  via_up_to_via_down_spacing   = 100 // Not applicable for 2-layer PCB
end_design_rule_set   // End of design rule set

############ Define define-rule zones: #####################
##
## Specify which areas on each layer will use each design-rule set.
## All coordinates are in microns.
##
##  DR_zone <DR name> <layer name>  RECT  X1 Y1 X2 Y2 // Use DR set 'DR name' in
##                                                    // rectangle defined by
##                                                    // (x1, y1) and (x2, y2)
##                                                    // on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> TRI  X1 Y1 X2 Y2 X2 Y3 // User DR set 'DR name'
##                                                        // in triangle defined by
##                                                        // 3 x/y coordinates on
##                                                        // layer 'layer name'.
##
##  DR_zone <DR name> <layer name> CIR  X Y R  // Use DR set 'DR name' in circle
##                                             // defined by center (x,y) and radius
##                                             // R on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> ALL      // Use DR set 'DR name' on all cells
##                                          // on layer <layer name>.
##
#         Design Rule         Layer
#             Name            Name        Layer coordinates
#         -----------         -------     ----------------------
DR_zone   Pkg_bottom_DRs      Pkg_bot      ALL
DR_zone   PCB_top_DRs         PCB_top      ALL
DR_zone   PCB_bottom_DRs      PCB_bottom   ALL



#################################################################################
#################################################################################
#################################################################################
#
# The following parameters affect the final routed solution and run-time, but
# should not be modified without extreme caution:
#
#

# The parameter 'maxIterations' is the maximum number of iterations the program
# will make to find a crossing-free solution.
maxIterations = 200

# The parameter 'violationFreeThreshold' is the minimum number of crossing-free
# solutions that program will find before deciding that it has found the
# optimal solution.
violationFreeThreshold = 50

# The parameter 'vertCost' is the cost of routing up or down to a different
# routing layer, i.e., the cost of a layer-to-layer via. The value is in
# microns, and should be interpreted as half the trace-length that could be
# avoided by adding a via to a different layer. If not specified, the default 
# value is half the average dimension of the map (e.g., 5000um for a 10x10mm map).
vertCost  = 2000   // in microns of equivalent trace length
