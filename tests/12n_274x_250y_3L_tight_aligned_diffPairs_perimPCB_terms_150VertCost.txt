#12345678901234567890123456789012345678901234567890123456789012345678901234567890
# Any line that begins with a '#' character is a comment and is disregarded by
# the auto-router program. Blank lines are allowed. Use them to add clarity to 
# the input file.
#
# You can add additional comments following two consecutive slash characters:
# grid_resolution = 5  // 5 micron grid is fine enough for 20um line/space
#


# Specify the dimension in microns of the grid that the auto-router will use.
# Use a dimension that is less than one half to one quarter of the smallest
# linewidth or spacing in the design.
grid_resolution = 20  // in microns

# Specify the dimensions in millimeters of the grid:
width  = 5.48 // in millimeters
height = 5.0  // in millimeters

# Specify the number of routing layers. Typical values are 1, 2, 4, 6, and 8.
number_layers = 3

# Specify the name of each routing layer and (for multiple layers) the name
# of each intervening via layer. Examples:
# 
#   layer_names = M1 V1-2 M2 V2-3 M3 V3-4 M4  // For 4-layer substrate
#   layer_names = M   // for single-layer
#
layer_names = Pkg_M1 BGA PCB_M1 VPCB1-2 PCB_M2

#
# Specify the origin that the start/end-locations are relative to. Allowed 
# values are: center, lower_left, upper_left, lower_right, upper_right
#
origin = lower_left


#
# Specify the pin-swappable zone on the PCB layers. A thin square swap-zone is
# created far enough away from the map's perimeter so that pseudo-terminals are
# located at least half a pseudo-net's linewidth from the map's edge. (If we
# placed the swap-zone closer to the map's perimeter, routing would be disallowed
# because of the close proximity to the map's edge.)
#
pin_swap      PCB_M1   RECT    0 200       5480 240
pin_swap      PCB_M2   RECT    0 200       5480 240
#
# End of statements for defining swap-zones on PCB layers
#


#
# Specify the start- and end-locations of the paths to be routed. Dimensions are
# in microns, relative to the origin specified with the 'origin' statement.
# Start- and End-Layers are specified using the names from the 'layer_names'
# statement.
#
start_nets
# Net                Start   Start    Start        End     End    End    Net-specific     Diff Pair Partner
# Name               Layer     X        Y         Layer     X      Y     Rule (optional)  (optional)
# ----------------- ------- -------- --------    -------  -----  -----   ---------------  -----------------
A_pos               Pkg_M1    660     4500       PCB_M1    220    220    50_ohm            A_neg
A_neg               Pkg_M1    660     4700       PCB_M1    220    220    50_ohm            A_pos  
B_pos               Pkg_M1   1480     4500       PCB_M1    220    220    50_ohm            B_neg
B_neg               Pkg_M1   1480     4700       PCB_M1    220    220    50_ohm            B_pos
C_pos               Pkg_M1   2320     4500       PCB_M1    220    220    50_ohm            C_neg
C_neg               Pkg_M1   2320     4700       PCB_M1    220    220    50_ohm            C_pos
D_pos               Pkg_M1   3140     4500       PCB_M1    220    220    50_ohm            D_neg
D_neg               Pkg_M1   3140     4700       PCB_M1    220    220    50_ohm            D_pos
E_pos               Pkg_M1   3980     4500       PCB_M1    220    220    50_ohm            E_neg
E_neg               Pkg_M1   3980     4700       PCB_M1    220    220    50_ohm            E_pos
F_pos               Pkg_M1   4800     4500       PCB_M1    220    220    50_ohm            F_neg
F_neg               Pkg_M1   4800     4700       PCB_M1    220    220    50_ohm            F_pos
end_nets

# 
# Specify which areas on each layer to block from routing. By default, all areas
# are routable. Use the following BLOCK or UNBLOCK statements to define 
# unroutable areas. All coordinates are in microns.
#
#  BLOCK RECT <layer name> X1 Y1 X2 Y2 // Block the rectangle defined by 
#                                      // (x1, y1) and (x2, y2)
#
#  BLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Block triangle defined by 
#                                            // 3 x/y coordinates
#
#  BLOCK CIR  <layer name> X Y R  // Block circle defined by center (x,y) and 
#                                 // radius R
#
#  BLOCK ALL <layer name>         // Block all cells on layer <layer name>
#
#  UNBLOCK RECT <layer name> X1 Y1 X2 Y2 // Unblock the rectangle defined by 
#                                        // (x1, y1) and (x2, y2)
#
#  UNBLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Unblock triangle defined 
#                                              // by 3 x/y coordinates
#
#  UNBLOCK CIR  <layer name> X Y R  // Unblock circle defined by center (x,y) 
#                                   // and radius R
#
#  UNBLOCK ALL <layer name>         // Unblock all cells on layer <layer name> 
#
# As an example, to create a keep-out zone on the perimeter of layer M1,
# use the folowing two commands:
#
#    BLOCK ALL M1                    // Block all of M1
#    UNBLOCK RECT M1 20 20 16.8 16.8 // Unblock a large rectangle in middle of M1
#

#
# Block all routing layers in package within 300 um of bottom edge
#
BLOCK RECT Pkg_M1   0  0    5480  300
#
# End of package outline definition
#


#
# Create the BGA pattern on layer 'BGA':
#
BLOCK ALL   BGA // Block entire BGA layer, and then unblock circles for for BGAs
UNBLOCK CIR BGA    660  2100  660  // Wide opening for 2 diff-pair nets
UNBLOCK CIR BGA   1480  2100  660  // Wide opening for 2 diff-pair nets
UNBLOCK CIR BGA   2320  2100  660  // Wide opening for 2 diff-pair nets
UNBLOCK CIR BGA   3140  2100  660  // Wide opening for 2 diff-pair nets
UNBLOCK CIR BGA   3980  2100  660  // Wide opening for 2 diff-pair nets
UNBLOCK CIR BGA   4800  2100  660  // Wide opening for 2 diff-pair nets
#
# End of BGA pattern definition for layer BGA
#


#
# Design rules: #########################################
#
design_rule_set Pkg_Bottom   Design Rules for bottom package layer  // Rules for bottom pkg layer
  line_width        =  50  
  line_spacing      =  50 
  via_up_diameter   = 500  // BGA pad diameter is 500um
  via_down_diameter = 100  // Via pad diameter is 100um

  via_up_to_trace_spacing      =  50
  via_down_to_trace_spacing    =  20 // Trace-to-pad spacing is 20um   
  via_up_to_via_up_spacing     = 280 // BGA pad-to-pad spacing is 300 um. Reduced by equivalent of 1 cell (20um).
  via_down_to_via_down_spacing =  40 // Via pad-to-pad spacing is 40-50um

  via_up_to_via_down_spacing   =  20 // BGA pad-to-via pad spacing is <10 um
  
  exception = 50_ohm   // Exception design rules for 50-ohm differential pairs 
    diff_pair_pitch = 200  
  end_exception  // End of exception for 50-ohm differential pairs 

end_design_rule_set   // End of design rule set


design_rule_set   No_NonDiffPair_Vias   Design Rules for diff-pair BGA vias

  line_width        =  50
  line_spacing      =  50
  via_up_diameter   = 500  // BGA pad diameter is 500um
  via_down_diameter = 100  // Via pad diameter is 100um

  via_up_to_trace_spacing      =  50
  via_down_to_trace_spacing    =  20 // Trace-to-pad spacing is 20um
  via_up_to_via_up_spacing     = 280 // BGA pad-to-pad spacing is 300 um. Reduced by equivalent of 1 cell (20um).
  via_down_to_via_down_spacing =  40 // Via pad-to-pad spacing is 40-50um
  via_up_to_via_down_spacing   =  20 // BGA pad-to-via pad spacing is <10 um

  allowed_directions = ANY_LATERAL  // Prevent non-diff-pair nets from having vias in this area

  exception = 50_ohm
    diff_pair_pitch = 200
    allowed_directions = ANY  // Allow diff-pair nets in this region
  end_exception

end_design_rule_set


design_rule_set  No_Vias     Design Rules prohibiting all vias

  line_width        =  50
  line_spacing      =  50
  via_up_diameter   = 500  // BGA pad diameter is 500um
  via_down_diameter = 100  // Via pad diameter is 100um

  via_up_to_trace_spacing      =  50
  via_down_to_trace_spacing    =  20 // Trace-to-pad spacing is 20um
  via_up_to_via_up_spacing     = 280 // BGA pad-to-pad spacing is 300 um. Reduced by equivalent of 1 cell (20um).
  via_down_to_via_down_spacing =  40 // Via pad-to-pad spacing is 40-50um
  via_up_to_via_down_spacing   =  20 // BGA pad-to-via pad spacing is <10 um

  allowed_directions = ANY_LATERAL // Prevent non-diff-pair vias in this region

  exception = 50_ohm
    diff_pair_pitch = 200
    allowed_directions = ANY_LATERAL  // Prevent diff-pair vias in this region
  end_exception

end_design_rule_set


design_rule_set PCB_Top    Design Rules for top PCB layer  // Rules for top PCB layer
  line_width        = 127  // 5 mils, based on example evaluation board from industry
  line_spacing      = 102  // 4 mils, based on example evaluation board from industry
  via_up_diameter   = 508  // 20-mil via pad diameter, based on example evaluation board
  via_down_diameter = 500  // BGA pad diameter is 500um

  via_up_to_trace_spacing      = 102 // 4 mils, based on example evaluation board from industry
  via_down_to_trace_spacing    = 102 // 4 mils, based on example evaluation board from industry
  via_up_to_via_up_spacing     = 102 // 4 mils (assumption)
  via_down_to_via_down_spacing = 280 // BGA pad-to-pad spacing is 300 um
  via_up_to_via_down_spacing   = 102 // 4 mils (assumption)

  allowed_directions = MANHATTAN_X

  exception = 50_ohm   // Exception design rules for 50-ohm differential pairs
    diff_pair_pitch = 260
  end_exception  // End of exception for 50-ohm differential pairs

end_design_rule_set   // End of design rule set


design_rule_set PCB_Non-Top    Design Rules for non-top PCB layers  // Rules for non-top PCB layers
  line_width        = 127  // 5 mils, based on example evaluation board from industry
  line_spacing      = 102  // 4 mils, based on example evaluation board from industry
  via_up_diameter   = 508  // 20-mil via pad diameter, based on example evaluation board
  via_down_diameter = 508  // 20-mil via pad diameter, based on example evaluation board

  via_up_to_trace_spacing      = 102 // 4 mils, based on example evaluation board from industry
  via_down_to_trace_spacing    = 102 // 4 mils, based on example evaluation board from industry
  via_up_to_via_up_spacing     = 102 // 4 mils (assumption)
  via_down_to_via_down_spacing = 102 // 4 mils (assumption)
  via_up_to_via_down_spacing   = 102 // 4 mils (assumption)

  allowed_directions = MANHATTAN_X

  exception = 50_ohm   // Exception design rules for 50-ohm differential pairs
    diff_pair_pitch = 260
  end_exception  // End of exception for 50-ohm differential pairs

end_design_rule_set   // End of design rule set


############ Define design-rule zones: #####################
##
## Specify which areas on each layer will use each design-rule set.
## All coordinates are in microns.
##
##  DR_zone <DR name> <layer name>  RECT  X1 Y1 X2 Y2 // Use DR set 'DR name' in
##                                                    // rectangle defined by
##                                                    // (x1, y1) and (x2, y2)
##                                                    // on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> TRI  X1 Y1 X2 Y2 X2 Y3 // User DR set 'DR name'
##                                                        // in triangle defined by
##                                                        // 3 x/y coordinates on
##                                                        // layer 'layer name'.
##
##  DR_zone <DR name> <layer name> CIR  X Y R  // Use DR set 'DR name' in circle
##                                             // defined by center (x,y) and radius
##                                             // R on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> ALL      // Use DR set 'DR name' on all cells
##                                          // on layer <layer name>.
##
DR_zone   Pkg_Bottom      Pkg_M1    ALL
DR_zone   PCB_Top         PCB_M1    ALL
DR_zone   PCB_Non-Top     PCB_M2    ALL

#
# Create circular design-rule zones on Pkg_M3 above each BGA via for diff-pairs, to prevent non-diff-pair nets
# routing through these extra-large BGA via holes. Each diff-pair requires 4 DR_zone statements:
#   (1) Large circle that prevents *all* vias
#   (2) Small circle that allows only diff-pair vias at center of BGA via-hole (for pseudo-path's centerline)
#   (3) Small circle that allows only diff-pair vias where first diff-pair centerline via should be located
#   (4) Small circle that allows only diff-pair vias where second diff-pair centerline via should be located
#
DR_zone  No_Vias             Pkg_M1     CIR    660     2100     660   // Wide opening for diff pair
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR    660     2100       0   // Small opening for pseudo-path centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR    660     1700       0   // Small opening for diff-pair centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR    660     2500       0   // Small opening for diff-pair centerline
#
DR_zone  No_Vias             Pkg_M1     CIR   1480     2100     660   // Wide opening for diff pair
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   1480     2100       0   // Small opening for pseudo-path centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   1480     1700       0   // Small opening for diff-pair centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   1480     2500       0   // Small opening for diff-pair centerline
#
DR_zone  No_Vias             Pkg_M1     CIR   2320     2100     660   // Wide opening for diff pair
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   2320     2100       0   // Small opening for pseudo-path centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   2320     1700       0   // Small opening for diff-pair centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   2320     2500       0   // Small opening for diff-pair centerline
#
DR_zone  No_Vias             Pkg_M1     CIR   3140     2100     660   // Wide opening for diff pair
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   3140     2100       0   // Small opening for pseudo-path centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   3140     1700       0   // Small opening for diff-pair centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   3140     2500       0   // Small opening for diff-pair centerline
#
DR_zone  No_Vias             Pkg_M1     CIR   3980     2100     660   // Wide opening for diff pair
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   3980     2100       0   // Small opening for pseudo-path centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   3980     1700       0   // Small opening for diff-pair centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   3980     2500       0   // Small opening for diff-pair centerline
#
DR_zone  No_Vias             Pkg_M1     CIR   4800     2100     660   // Wide opening for diff pair
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   4800     2100       0   // Small opening for pseudo-path centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   4800     1700       0   // Small opening for diff-pair centerline
DR_zone  No_NonDiffPair_Vias Pkg_M1     CIR   4800     2500       0   // Small opening for diff-pair centerline
#
# End of design-rule zones for diff-pair vias
#



#################################################################################
#################################################################################
#################################################################################
#
# The following parameters affect the final routed solution and run-time, but
# should not be modified without extreme caution:
#
#

# The parameter 'maxIterations' is the maximum number of iterations the program
# will make to find a crossing-free solution.
maxIterations = 2000

# The parameter 'violationFreeThreshold' is the minimum number of crossing-free
# solutions that program will find before deciding that it has found the
# optimal solution.
violationFreeThreshold = 50

# The parameter 'vertCost' is the cost of routing up or down to a different
# routing layer, i.e., the cost of a layer-to-layer via. The value is in
# microns, and should be interpreted as half the trace-length that could be
# avoided by adding a via to a different layer.
# vertCost  = 5000   // in microns of equivalent trace length
vertCost  = 150   // in microns of equivalent trace length

# The parameter 'runsPerPngMap' is the number of iterations to run between
# writing PNG versions of the routing maps.
runsPerPngMap =  1
