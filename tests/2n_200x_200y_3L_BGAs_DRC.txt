#12345678901234567890123456789012345678901234567890123456789012345678901234567890
# Any line that begins with a '#' character is a comment and is disregarded by
# the auto-router program. Blank lines are allowed. Use them to add clarity to 
# the input file.
#
# You can add additional comments following two consecutive slash characters:
# grid_resolution = 5  // 5 micron grid is fine enough for 20um line/space
#


# Specify the dimension in microns of the grid that the auto-router will use.
# Use a dimension that is less than one half to one quarter of the smallest
# linewidth or spacing in the design.
grid_resolution = 20  // in microns

# Specify the dimensions in millimeters of the grid:
width  = 4  // in millimeters
height = 2  // in millimeters

# Specify the number of routing layers. Typical values are 1, 2, 4, 6, and 8.
number_layers = 3

# Specify the name of each routing layer and (for multiple layers) the name
# of each intervening via layer. Examples:
# 
#   layer_names = M1 V1-2 M2 V2-3 M3 V3-4 M4  // For 4-layer substrate
#   layer_names = M   // for single-layer
#
layer_names = Bot_Minus_One Via_Bot Pkg_Bot BGA PCB

#
# Specify the origin that the start/end-locations are relative to. Allowed 
# values are: center, lower_left, upper_left, lower_right, upper_right
#
origin = lower_left

#
# Specify the start- and end-locations of the paths to be routed. Dimensions are
# in microns, relative to the origin specified with the 'origin' statement.
# Start- and End-Layers are specified using the names from the 'layer_names'
# statement.
#
start_nets
# Net           Start    Start          Start            End      End             End
# Name          Layer      X               Y             Layer     X               Y
# --------     -------   -----           -----         -------   -----           -----
A              Bot_Minus_One   100 1000                PCB   2400  1000
B              Bot_Minus_One  3900 1000                PCB   1600  1000
end_nets

# 
# Specify which areas on each layer to block from routing. By default, all areas
# are routable. Use the following BLOCK or UNBLOCK statements to define 
# unroutable areas. All coordinates are in microns.
#
#  BLOCK RECT <layer name> X1 Y1 X2 Y2 // Block the rectangle defined by 
#                                      // (x1, y1) and (x2, y2)
#
#  BLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Block triangle defined by 
#                                            // 3 x/y coordinates
#
#  BLOCK CIR  <layer name> X Y R  // Block circle defined by center (x,y) and 
#                                 // radius R
#
#  BLOCK ALL <layer name>         // Block all cells on layer <layer name>
#
#  UNBLOCK RECT <layer name> X1 Y1 X2 Y2 // Unblock the rectangle defined by 
#                                        // (x1, y1) and (x2, y2)
#
#  UNBLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Unblock triangle defined 
#                                              // by 3 x/y coordinates
#
#  UNBLOCK CIR  <layer name> X Y R  // Unblock circle defined by center (x,y) 
#                                   // and radius R
#
#  UNBLOCK ALL <layer name>         // Unblock all cells on layer <layer name> 
#
# As an example, to create a keep-out zone on the perimeter of layer M1,
# use the folowing two commands:
#
#    BLOCK ALL M1                    // Block all of M1
#    UNBLOCK RECT M1 20 20 16.8 16.8 // Unblock a large rectangle in middle of M1
#

#
# Create the BGA pattern on via layer 'BGA':
#
BLOCK ALL BGA   // Block entire BGA layer, and then unblock areas for BGAs
UNBLOCK CIR BGA  1600 1000  260
UNBLOCK CIR BGA  2400 1000  260
# End of BGA pattern definition for via layer BGA


#
# Create pattern for blocking vias directly above BGA balls (no via-in-pad)
#
BLOCK CIR Via_Bot  1600  1000      240
BLOCK CIR Via_Bot  2400  1000      240
# End of pattern for blocking vias directly above BGA balls (no via-in-pad)

#
# Create square barriers on bottom package layer that prevent routing on this layer between 
# BGA sites:
#

# 3 vertical lines:
BLOCK RECT   Pkg_Bot   1200 0    1200 2000
BLOCK RECT   Pkg_Bot   2000 0    2000 2000
BLOCK RECT   Pkg_Bot   2800 0    2800 2000

# 2 horizontal lines:
BLOCK RECT   Pkg_Bot   0  600      4000  600
BLOCK RECT   Pkg_Bot   0 1400      4000 1400

# End of pattern for blocking routing on Pkg_Bot betwen BGA sites



#
# Design rules: #########################################
#
design_rule_set Non_Bottom   Design Rules for all package layers except bottom layer // Rules for routing layers
  line_width        = 20   // Minimum linewidth on T1024 is ~20 um
  line_spacing      = 20   // Minimum trace-to-trace spacing is ~20um on T1024
  via_up_diameter   = 100  // Pad diameter is 100um on T1024
  via_down_diameter = 100  // Pad diameter is 100um on T1024

  via_up_to_trace_spacing      = 20  // Trace-to-pad spacing is 20um on T1024
  via_down_to_trace_spacing    = 40  // Trace-to-pad spacing is 20um on T1024
  via_up_to_via_up_spacing     = 40  // Via pad-to-pad spacing is 40-50um on T1024
  via_down_to_via_down_spacing = 40  // Via pad-to-pad spacing is 40-50um on T1024
  via_up_to_via_down_spacing   = 40  // Via pad-to-pad spacing is 40-50um on T1024
end_design_rule_set   // End of design rule set

design_rule_set Pkg_Bottom   Design Rules for bottom package layer  // Rules for bottom pkg layer
  line_width        = 100  // Typical linewidth on bottom of T1024 is ~100 um
  line_spacing      = 250  // Don't make minimum line spacing too large, or else we get DRC violations.
                           // <=200um is OK, but 250 um will cause DRCs.
  via_up_diameter   = 500  // BGA pad diameter is 500um on T1024
  via_down_diameter = 100  // Via pad diameter is 100um on T1024

  via_up_to_trace_spacing      = 200 // Trace-to-pad spacing is 200-300um on T1024
  via_down_to_trace_spacing    =  20 // Trace-to-pad spacing is 20um on T1024   
  via_up_to_via_up_spacing     = 290 // BGA pad-to-pad spacing is 300 um on T1024
  via_down_to_via_down_spacing =  40 // Via pad-to-pad spacing is 40-50um on T1024

  via_up_to_via_down_spacing   =  20 // BGA pad-to-via pad spacing is <10 um on T1024
end_design_rule_set   // End of design rule set


design_rule_set PCB    Design Rules for top PCB layer  // Rules for top PCB layer
  line_width        = 100  // Guess
  line_spacing      = 100  // Guess
  via_up_diameter   = 100  // Not applicable for single-layer PCB
  via_down_diameter = 500  // BGA pad diameter is 500um on T1024

  via_up_to_trace_spacing      = 100 // Not applicable for single-layer PCB
  via_down_to_trace_spacing    = 100 // Guess
  via_up_to_via_up_spacing     = 100 // Not applicable for single-layer PCB
  via_down_to_via_down_spacing = 290 // BGA pad-to-pad spacing is 300 um on T1024

  via_up_to_via_down_spacing   = 100 // Not applicable for single-layer PCB
end_design_rule_set   // End of design rule set


############ Define define-rule zones: #####################
##
## Specify which areas on each layer will use each design-rule set.
## All coordinates are in microns.
##
##  DR_zone <DR name> <layer name>  RECT  X1 Y1 X2 Y2 // Use DR set 'DR name' in
##                                                    // rectangle defined by
##                                                    // (x1, y1) and (x2, y2)
##                                                    // on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> TRI  X1 Y1 X2 Y2 X2 Y3 // User DR set 'DR name'
##                                                        // in triangle defined by
##                                                        // 3 x/y coordinates on
##                                                        // layer 'layer name'.
##
##  DR_zone <DR name> <layer name> CIR  X Y R  // Use DR set 'DR name' in circle
##                                             // defined by center (x,y) and radius
##                                             // R on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> ALL      // Use DR set 'DR name' on all cells
##                                          // on layer <layer name>.
##
DR_zone   Non_Bottom      Bot_Minus_One  ALL
DR_zone   Pkg_Bottom      Pkg_Bot        ALL
DR_zone   PCB             PCB            ALL


#################################################################################
#################################################################################
#################################################################################
#
# The following parameters affect the final routed solution and run-time, but
# should not be modified without extreme caution:
#
#

# The parameter 'maxIterations' is the maximum number of iterations the program
# will make to find a crossing-free solution.
maxIterations = 100

# The parameter 'violationFreeThreshold' is the minimum number of crossing-free
# solutions that program will find before deciding that it has found the
# optimal solution.
violationFreeThreshold = 20

# The parameter 'vertCost' is the cost of routing up or down to a different
# routing layer, i.e., the cost of a layer-to-layer via. The value is in
# microns, and should be interpreted as the trace length that could be
# avoided by adding a pair of vias to a different layer.
vertCost  = 2000   // in microns of equivalent trace length

# The parameter 'runsPerPngMap' is the number of iterations to run between
# writing PNG versions of the routing maps.
runsPerPngMap =  1

