#12345678901234567890123456789012345678901234567890123456789012345678901234567890
# Any line that begins with a '#' character is a comment and is disregarded by
# the auto-router program. Blank lines are allowed. Use them to add clarity to 
# the input file.
#
# You can add additional comments following two consecutive slash characters:
# grid_resolution = 5  // 5 micron grid is fine enough for 20um line/space
#


# Specify the dimension in microns of the grid that the auto-router will use.
# Use a dimension that is less than one half to one quarter of the smallest
# linewidth or spacing in the design.
grid_resolution = 1  // in microns

# Specify the dimensions in millimeters of the grid:
width  = 0.8  // in millimeters
height = 0.5  // in millimeters

# Specify the number of routing layers. Typical values are 1, 2, 4, 6, and 8.
number_layers = 4

# Specify the name of each routing layer and (for multiple layers) the name
# of each intervening via layer. Examples:
# 
#   layer_names = M1 V1-2 M2 V2-3 M3 V3-4 M4  // For 4-layer substrate
#   layer_names = M   // for single-layer
#
layer_names = M1 V12 M2 V23 M3 V34 M4

#
# Specify the origin that the start/end-locations are relative to. Allowed 
# values are: center, lower_left, upper_left, lower_right, upper_right
#
origin = lower_left

################ Define nets: ##########################
#
# Specify the start- and end-locations of the paths to be routed. Dimensions are
# in microns, relative to the origin specified with the 'origin' statement.
# Start- and End-Layers are specified using the names from the 'layer_names'
# statement.
#
start_nets
# Net        Start  Start Start    End    End   End     Net-specific     Diff Pair Partner    P/N terminal swappability
# Name       Layer    X     Y     Layer    X     Y      Rule (optional)  (optional)           (optional)
# --------  ------- ----- -----  ------- ----- -----    ---------------  -----------------    ---------------------
   N0_p        M1    30     30      M4    730   430         50_ohm           N0_n             PN_swappable
   N0_n        M1    40     30      M4    750   430         50_ohm           N0_p             PN_swappable
   N1_p        M1    50    140      M4    700   250        100_ohm           N1_n             PN_swappable
   N1_n        M1    50    150      M4    700   270        100_ohm           N1_p             PN_swappable
   N2_p        M1   650     30      M4     80   466         50_ohm           N2_n             PN_swappable
   N2_n        M1   660     40      M4     90   476         50_ohm           N2_p             PN_swappable
   N3_p        M1   500    476      M4     23    18        100_ohm           N3_n             PN_swappable
   N3_n        M1   510    476      M4     23    28        100_ohm           N3_p             PN_swappable
end_nets

############ Define keep-out areas: #####################
# 
# Specify which areas on each layer to block from routing. By default, all areas
# are routable. Use the following BLOCK or UNBLOCK statements to define 
# unroutable areas. All coordinates are in microns.
#
#  BLOCK RECT <layer name> X1 Y1 X2 Y2 // Block the rectangle defined by 
#                                      // (x1, y1) and (x2, y2)
#
#  BLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Block triangle defined by 
#                                            // 3 x/y coordinates
#
#  BLOCK CIR  <layer name> X Y R  // Block circle defined by center (x,y) and 
#                                 // radius R
#
#  BLOCK ALL <layer name>         // Block all cells on layer <layer name>
#
#  UNBLOCK RECT <layer name> X1 Y1 X2 Y2 // Unblock the rectangle defined by 
#                                        // (x1, y1) and (x2, y2)
#
#  UNBLOCK TRI  <layer name> X1 Y1 X2 Y2 X2 Y3 // Unblock triangle defined 
#                                              // by 3 x/y coordinates
#
#  UNBLOCK CIR  <layer name> X Y R  // Unblock circle defined by center (x,y) 
#                                   // and radius R
#
#  UNBLOCK ALL <layer name>         // Unblock all cells on layer <layer name> 
#
# As an example, to create a keep-out zone on the perimeter of layer M1,
# use the folowing two commands:
#
#    BLOCK ALL M1                    // Block all of M1
#    UNBLOCK RECT M1 20 20 16.8 16.8 // Unblock a large rectangle in middle of M1
#
BLOCK ALL M2
unBLoCK   RECT M2   5  5 795 495 
block all V12
unblock CIR V12 175 175 125
#
block TRI M3 200 100 100 100 200 200 
#
block TRI M2 400 100 300 100 400 200 
#
block TRI M1 600 300 500 300 600 400 
#
block TRI M3 100 200 150 400 510 180 
#
block rect M1 750 450  800 500
#
block rect M4 650 350  725 425
#
BLOCK CIR  M4   600  200      100
#



#
####### Define cost-multipliers for traces and vias ##############################
#
#  trace_cost_multipliter  <multiplier index>     <multiplier value>
#    via_cost_multipliter  <multiplier index>     <multiplier value>
trace_cost_multiplier             1                      2
trace_cost_multiplier             2                      4

via_cost_multiplier               1                      3
via_cost_multiplier               2                      6


#
# Define cost-zones for traces and vias:
#
# trace_cost_zone   <trace mult. index>     <rout. layer name>   <ALL|RECT|CIR|TRI>
#   via_cost_zone     <via mult. index>       <via layer name>   <ALL|RECT|CIR|TRI>




# Avoid routing on layer M1 in rectangle in center of map:
trace_cost_zone              1                  M1           RECT  200 100   600 400
trace_cost_zone              2                  M1           RECT  300 200   500 300

# Avoid vias within 100 microns of map's perimeter on layers V1-2 and V2-3:
via_cost_zone                2                  V12          ALL
via_cost_zone                1                  V12          RECT   50  50   750 450
via_cost_zone                0                  V12          RECT  100 100   700 400

via_cost_zone                2                  V23          ALL
via_cost_zone                1                  V23          RECT   50  50   750 450
via_cost_zone                0                  V23          RECT  100 100   700 400


####### Define design rules: #########################################
#
#
design_rule_set Fine_Design_Rules   Fine Design Rules // Rules with smaller widths and spacings
  line_width = 2
  line_spacing = 2
  via_up_diameter = 3
  via_down_diameter = 3

  via_up_to_trace_spacing = 3
  via_down_to_trace_spacing = 3
  via_up_to_via_up_spacing = 3
  via_down_to_via_down_spacing = 3
  via_up_to_via_down_spacing = 3
  
  exception = 50_ohm
    diff_pair_pitch = 5
  end_exception

  exception = 100_ohm
    diff_pair_pitch = 8
  end_exception
  
end_design_rule_set   // End of design rule set

design_rule_set Coarse_Design_Rules   Coarse Design Rules // Rules with larger widths and spacings
  line_width = 3
  line_spacing = 3
  via_up_diameter = 4
  via_down_diameter = 5

  via_up_to_trace_spacing = 4
  via_down_to_trace_spacing = 4
  via_up_to_via_up_spacing = 4
  via_down_to_via_down_spacing = 4
  via_up_to_via_down_spacing = 4
  
  exception = 50_ohm
    diff_pair_pitch = 10
  end_exception

  exception = 100_ohm
    diff_pair_pitch = 15
  end_exception
  
end_design_rule_set   // End of design rule set


############ Define design-rule zones: #####################
##
## Specify which areas on each layer will use each design-rule set.
## All coordinates are in microns.
##
##  DR_zone <DR name> <layer name>  RECT  X1 Y1 X2 Y2 // Use DR set 'DR name' in
##                                                    // rectangle defined by
##                                                    // (x1, y1) and (x2, y2)
##                                                    // on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> TRI  X1 Y1 X2 Y2 X2 Y3 // User DR set 'DR name'
##                                                        // in triangle defined by
##                                                        // 3 x/y coordinates on
##                                                        // layer 'layer name'.
##
##  DR_zone <DR name> <layer name> CIR  X Y R  // Use DR set 'DR name' in circle
##                                             // defined by center (x,y) and radius
##                                             // R on layer 'layer name'.
##
##  DR_zone <DR name> <layer name> ALL      // Use DR set 'DR name' on all cells
##                                          // on layer <layer name>.
##
DR_zone   Fine_Design_Rules     M1   ALL
DR_zone   Coarse_Design_Rules   M2   RECT    0   0       400 500
DR_zone   Fine_Design_Rules     M2   RECT  400   0       800 500
DR_zone   Fine_Design_Rules     M3   RECT    0   0       400 500
DR_zone   Coarse_Design_Rules   M3   RECT  400   0       800 500
DR_zone   Coarse_Design_Rules   M4   ALL

#################################################################################
#################################################################################
#################################################################################
#
# The following parameters affect the final routed solution and run-time, but
# should not be modified without extreme caution:
#
#

# The parameter 'maxIterations' is the maximum number of iterations the program
# will make to find a crossing-free solution.
maxIterations = 200

# The parameter 'violationFreeThreshold' is the minimum number of crossing-free
# solutions that program will find before deciding that it has found the
# optimal solution.
violationFreeThreshold = 20

# The parameter 'vertCost' is the cost of routing up or down to a different
# routing layer, i.e., the cost of a layer-to-layer via.
vertCost  = 37

# The parameter 'runsPerPngMap' is the number of iterations to run between
# writing PNG versions of the routing maps.
runsPerPngMap =  1



